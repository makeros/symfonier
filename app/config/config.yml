imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: fos_rest.yml }
    - { resource: doctrine_mongo.yml }
    - { resource: sonata_admin.yml }

framework:
    #esi:             ~
    serializer: true
    translator:      { fallback: %locale% }
    secret:          %secret%
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: %kernel.debug%
    form:            true
    csrf_protection: true
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_proxies: ~
    session:
        name : %symfonier_session_name%
        handler_id: ~
    fragments:       ~


mopa_bootstrap:
    form: ~  # Adds twig form theme  support
    menu: ~  # enables twig helpers for menu

# Twig Configuration
twig:
    debug:            %kernel.debug%
    strict_variables: %kernel.debug%
    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'

# Assetic Configuration
assetic:
#     debug:          %kernel.debug%
#     use_controller: true
#     bundles:        [ TakkaUserBundle, FOSUserBundle ]
#     #java: /usr/bin/java
    filters:
        compass:
            bin: '/usr/local/bin/compass'
        scss:
            sass: /usr/local/bin/sass
            apply_to: "\.scss$"  
#         cssrewrite: ~
#         compass:
#             apply_to: "\.(scss|sass)$"
        #closure:
        #    jar: %kernel.root_dir%/Resources/java/compiler.jar
        #yui_css:
        #    jar: %kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar



# services:
#     takka.api.file.service:
#         class: Takka\ApiBundle\Controller\FileController
#         arguments: ["@service_container"]


# Swiftmailer Configuration
# swiftmailer:
#     transport:  smtp
#     encryption: ssl
#     auth_mode:  login
#     host:       
#     username:   
#     password:   

sensio_framework_extra:
    view: { annotations: false }


fos_user:
    db_driver: mongodb # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Symfonier\UserBundle\Document\User
    # registration:
    #     form:
    #         type: symfonier_user_registration
    #         handler: symfonier_user.registration.form.handler

nelmio_api_doc: ~


liip_cache_control:
    flash_message_listener: false
    authorization_listener: false
    rules:
        # the controls section values are used in a call to Response::setCache();
        - { path: ^/api, method: [GET, HEAD], controls: { public: true, max_age: 15, s_maxage: 30, last_modified: "-1 hour" }, vary: [Accept-Encoding, Accept-Language] }

bazinga_hateoas: ~

bazinga_rest_extra: ~

avalanche_imagine:
    filters:
        general_thumb:
            type:    thumbnail
            options: { size: [160, 120], mode: outbound }
        avatar_thumb:
            type:    thumbnail
            options: { size: [64, 64], mode: outbound }
